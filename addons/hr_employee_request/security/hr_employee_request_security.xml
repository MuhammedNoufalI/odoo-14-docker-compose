<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record model="ir.module.category" id="module_category_hr_requests">
        <field name="name">Employee Requests</field>
        <field name="description">Helps you manage your employee requests.</field>
        <field name="sequence">11</field>
    </record>

    <record id="group_hr_requests_user" model="res.groups">
        <field name="name">Requests Officer</field>
        <field name="category_id" ref="module_category_hr_requests"/>
        <field name="implied_ids" eval="[(4, ref('hr.group_hr_user'))]"/>
    </record>

    <record id="group_hr_requests_manager" model="res.groups">
        <field name="name">Requests Manager</field>
        <field name="category_id" ref="module_category_hr_requests"/>
        <field name="implied_ids" eval="[(4, ref('hr_employee_request.group_hr_requests_user'))]"/>
        <field name="users" eval="[(4, ref('base.user_root')), (4, ref('base.user_admin'))]"/>
    </record>

    <record id="base.default_user" model="res.users">
        <field name="groups_id" eval="[(4,ref('hr_employee_request.group_hr_requests_user'))]"/>
    </record>

    <record id="hr_requests_rule_employee" model="ir.rule">
        <field name="name">Requests: employee: read all</field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_create" eval="False"/>
        <field name="perm_write" eval="False"/>
        <field name="perm_unlink" eval="False"/>
        <field name="groups" eval="[(4,ref('base.group_user'))]"/>
    </record>

    <record id="hr_requests_rule_employee_update" model="ir.rule">
        <field name="name">Requests: employee: create/write/unlink not validated own</field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="domain_force">[('employee_id.user_id','=',user.id), ('state', 'in', ['draft', 'confirm', 'cancel',
            'refuse'])]
        </field>
        <field name="perm_read" eval="False"/>
        <field name="groups" eval="[(4,ref('base.group_user'))]"/>
    </record>

    <record id="hr_requests_rule_officer_read" model="ir.rule">
        <field name="name">Requests: officer: read all</field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_create" eval="False"/>
        <field name="perm_write" eval="False"/>
        <field name="perm_unlink" eval="False"/>
        <field name="groups" eval="[(4, ref('hr_employee_request.group_hr_requests_user'))]"/>
    </record>

    <record id="hr_requests_rule_officer_update" model="ir.rule">
        <field name="name">Requests: officer: create/write/unlink own + managed employee + without department + same or
            managed department
        </field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="domain_force">['|',
            '|', ('employee_id.user_id', '=', user.id), ('employee_id.parent_id.user_id', '=', user.id),
            '|', '|', ('department_id', '=', False), ('department_id.member_ids.user_id', 'in', [user.id]),
            ('department_id.manager_id.user_id', '=', user.id)]
        </field>
        <field name="perm_read" eval="False"/>
        <field name="groups" eval="[(4, ref('hr_employee_request.group_hr_requests_user'))]"/>
    </record>

    <record id="hr_requests_rule_manager" model="ir.rule">
        <field name="name">Requests: manager: no limit</field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="groups" eval="[(4, ref('hr_employee_request.group_hr_requests_manager'))]"/>
    </record>

    <record id="hr_requests_rule_multicompany" model="ir.rule">
        <field name="name">Requests: multi company global rule</field>
        <field name="model_id" ref="model_hr_employee_request"/>
        <field name="global" eval="True"/>
        <field name="domain_force">['|', ('request_type_id.company_id', '=', False), ('request_type_id.company_id',
            'in', [user.company_id.id])]
        </field>
    </record>

    <record id="hr_request_type_rule_employee" model="ir.rule">
        <field name="name">Request Type: employee: read own</field>
        <field name="model_id" ref="model_hr_employee_request_type"/>
        <field name="domain_force">[('employee_id.user_id', '=', user.id)]</field>
        <field name="perm_create" eval="False"/>
        <field name="perm_write" eval="False"/>
        <field name="perm_unlink" eval="False"/>
        <field name="groups" eval="[(4,ref('base.group_user'))]"/>
    </record>

    <record id="hr_request_type_rule_employee_update" model="ir.rule">
        <field name="name">Request Type: employee: create/write/unlink not validated own</field>
        <field name="model_id" ref="model_hr_employee_request_type"/>
        <field name="domain_force">[('employee_id.user_id','=',user.id), ('state', 'in', ['draft', 'confirm', 'cancel',
            'refuse'])]
        </field>
        <field name="perm_read" eval="False"/>
        <field name="groups" eval="[(4,ref('base.group_user'))]"/>
    </record>

    <record id="hr_request_type_rule_officer_read" model="ir.rule">
        <field name="name">Request Type: officer: read all</field>
        <field name="model_id" ref="model_hr_employee_request_type"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_create" eval="False"/>
        <field name="perm_write" eval="False"/>
        <field name="perm_unlink" eval="False"/>
        <field name="groups" eval="[(4, ref('hr_employee_request.group_hr_requests_manager'))]"/>
    </record>

    <record id="hr_request_type_rule_officer_update" model="ir.rule">
        <field name="name">Request Type: officer: create/write/unlink own + managed employee + without department + same
            or managed department
        </field>
        <field name="model_id" ref="model_hr_employee_request_type"/>
        <field name="domain_force">['|',
            '|', ('employee_id.user_id', '=', user.id), ('employee_id.parent_id.user_id', '=', user.id),
            '|', '|', ('department_id', '=', False), ('department_id.member_ids.user_id', 'in', [user.id]),
            ('department_id.manager_id.user_id', '=', user.id)]
        </field>
        <field name="groups" eval="[(4,ref('hr_employee_request.group_hr_requests_user'))]"/>
    </record>

    <record id="hr_request_type_rule_manager" model="ir.rule">
        <field name="name">Request Type: manager: no limit</field>
        <field name="model_id" ref="model_hr_employee_request_type"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="groups" eval="[(4, ref('hr_employee_request.group_hr_requests_manager'))]"/>
    </record>

</odoo>
